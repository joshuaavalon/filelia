root: true
parser: "@typescript-eslint/parser"
parserOptions:
  ecmaFeatures:
    jsx: true
settings:
  react:
    version: detect
extends:
  - "@garoudev/eslint-config"
  - plugin:react/recommended
  - plugin:react-hooks/recommended
  - next/core-web-vitals
plugins:
  - "@typescript-eslint"
  - prettier
  - react
  - react-hooks
env:
  es6: true
  node: true
ignorePatterns:
  - node_modules
  - "**/dist"
  - "**/*.generated.ts"
  - "**/*.d.ts"
  - ".next"
overrides:
  - files:
      - "**/*.js"
      - "**/*.cjs"
      - "**/*.mjs"
      - "**/*.jsx"
    rules:
      "@typescript-eslint/no-var-requires": "off"
  - files:
      - "**/*.ts"
      - "**/*.cts"
      - "**/*.mts"
      - "**/*.tsx"
    rules:
      no-dupe-class-members: "off"
      "@typescript-eslint/explicit-member-accessibility": error
      "@typescript-eslint/array-type": error
      "@typescript-eslint/explicit-function-return-type":
        - error
        - allowExpressions: true
          allowHigherOrderFunctions: true
          allowTypedFunctionExpressions: true
          allowDirectConstAssertionInArrowFunctions: true
      "@typescript-eslint/naming-convention":
        - error
        - selector: default
          format:
            - camelCase
          leadingUnderscore: allowSingleOrDouble
        - selector: variable
          format:
            - camelCase
            - UPPER_CASE
            - PascalCase
          leadingUnderscore: allowSingleOrDouble
        - selector: typeLike
          format:
            - PascalCase
        - selector: variable
          modifiers:
            - destructured
          format:
        - selector: objectLiteralProperty
          format:
      "@typescript-eslint/no-empty-interface": "off"
      "@typescript-eslint/no-explicit-any": "off"
      "@typescript-eslint/no-unused-expressions":
        - error
      "@typescript-eslint/no-unused-vars":
        - error
        - args: after-used
          argsIgnorePattern: "^_"
          ignoreRestSiblings: true
      "@typescript-eslint/no-use-before-define":
        - error
        - typedefs: false
      "@typescript-eslint/quotes":
        - error
        - double
        - avoidEscape: true
      "@typescript-eslint/no-redeclare":
        - error
        - ignoreDeclarationMerge: true
      "@typescript-eslint/consistent-type-imports": error
      "@typescript-eslint/method-signature-style": error
      "@typescript-eslint/no-useless-empty-export": error
  - files:
      - "**/*.jsx"
      - "**/*.tsx"
    rules:
      "@typescript-eslint/naming-convention":
        - error
        - selector: default
          format:
            - camelCase
          leadingUnderscore: allowSingleOrDouble
        - selector: variable
          format:
            - camelCase
            - UPPER_CASE
            - PascalCase
          leadingUnderscore: allowSingleOrDouble
        - selector: typeLike
          format:
            - PascalCase
        - selector: function
          format:
            - PascalCase
            - camelCase
        - selector: parameter
          format:
            - PascalCase
            - camelCase
          leadingUnderscore: allowSingleOrDouble
        - selector: variable
          modifiers:
            - destructured
          format:
        - selector: objectLiteralProperty
          format:
      "@next/next/no-img-element": "off"
  - files:
      - "**/*.js"
      - "**/*.cjs"
      - "**/*.mjs"
      - "**/*.ts"
      - "**/*.cts"
      - "**/*.mts"
    rules:
      react-hooks/rules-of-hooks: "off"
